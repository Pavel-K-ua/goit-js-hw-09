{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,kBAC9BE,KAAMH,SAASC,cAAc,iBAC7BG,OAAQJ,SAASC,cAAc,mBAC/BI,IAAKL,SAASC,cAAc,oBAoB9B,SAASK,EAAcC,EAAUL,GAE/B,MAAMM,EAAgBC,KAAKC,SAAW,GAStC,OARgB,IAAIC,SAAQ,CAACC,EAASC,KAChCL,EACFI,EAAQhB,EAAAkB,OAAOC,QAAQ,qBAAqBR,QAAeL,MAE3DW,EAAOjB,EAAAkB,OAAOE,QAAQ,oBAAoBT,QAAeL,KAAS,G,CAxBxEJ,EAAKC,KAAKkB,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAMC,iBACN,MAAMC,EAAcC,OAAOvB,EAAKM,OAAOkB,OACjCC,EAAaF,OAAOvB,EAAKI,MAAMoB,OAC/BE,EAAYH,OAAOvB,EAAKK,KAAKmB,OAEnC,IAAK,IAAIG,EAAI,EAAGA,GAAKL,EAAaK,IAAK,CACrC,IAAIC,EAAaH,EAAaC,GAAaC,EAAI,GAC/CE,YAAW,KACTrB,EAAcmB,EAAGC,EAAW,GAC3BA,E,CAEL5B,EAAKC,KAAK6B,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n  Btn: document.querySelector('[type=\"submit\"]'),\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  const amountValue = Number(refs.amount.value);\n  const delayValue = Number(refs.delay.value);\n  const stepValue = Number(refs.step.value);\n\n  for (let i = 1; i <= amountValue; i++) {\n    let totalDelay = delayValue + stepValue * (i - 1);\n    setTimeout(() => {\n      createPromise(i, totalDelay);\n    }, totalDelay);\n  }\n  refs.form.reset();\n}\n\nfunction createPromise(position, delay) {\n  // console.log(delay);\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve(Notify.success(`Fulfilled promise ${position} in ${delay}`));\n    } else {\n      reject(Notify.failure(`Rejected promise ${position} in ${delay}`));\n    }\n  });\n\n  return promise;\n  // .then(( position, delay ) => {\n  //   console.log(delay);\n  //   Notify.success(`Fulfilled promise ${position} in ${delay}`);\n  // })\n  // .catch(( position, delay ) => {\n  //   Notify.failure(`Rejected promise ${position} in ${delay}`);\n  // });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delay","step","amount","Btn","$47d4ff9957288465$var$createPromise","position","shouldResolve","Math","random","Promise","resolve","reject","Notify","success","failure","addEventListener","event","preventDefault","amountValue","Number","value","delayValue","stepValue","i","totalDelay","setTimeout","reset"],"version":3,"file":"03-promises.4778fb38.js.map"}