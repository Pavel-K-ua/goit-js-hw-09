{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,kBAC9BE,KAAMH,SAASC,cAAc,iBAC7BG,OAAQJ,SAASC,cAAc,mBAC/BI,IAAKL,SAASC,cAAc,oBAG9BH,EAAKC,KAAKO,iBAAiB,UAE3B,SAAsBC,G,kBAOlB,IAAIC,EAAaC,EAAaC,GAAaC,EAAI,GAC/CC,YAAW,WAOf,IAAuBC,EAAUX,EAEzBY,EAFeD,EANHF,EAMaT,EANVM,EAQfM,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,SAACC,EAASC,GAChCL,EACFI,EAAQtB,EAAAwB,OAAOC,QAAQ,qBAAoCC,OAAfT,EAAS,QAAYS,OAANpB,KAE3DiB,EAAOvB,EAAAwB,OAAOG,QAAQ,oBAAmCD,OAAfT,EAAS,QAAYS,OAANpB,I,MAZxDM,E,EATLD,EAAMiB,iBAKN,IAJA,IAAMC,EAAcC,OAAO5B,EAAKM,OAAOuB,OACjClB,EAAaiB,OAAO5B,EAAKI,MAAMyB,OAC/BjB,EAAYgB,OAAO5B,EAAKK,KAAKwB,OAE1BC,EAAI,EAAGA,GAAKH,EAAaG,IAAGC,EAAAD,GAMrC9B,EAAKC,KAAK+B,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('[name=\"delay\"]'),\n  step: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n  Btn: document.querySelector('[type=\"submit\"]'),\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  const amountValue = Number(refs.amount.value);\n  const delayValue = Number(refs.delay.value);\n  const stepValue = Number(refs.step.value);\n\n  for (let i = 1; i <= amountValue; i++) {\n    let totalDelay = delayValue + stepValue * (i - 1);\n    setTimeout(() => {\n      createPromise(i, totalDelay);\n    }, totalDelay);\n  }\n  refs.form.reset();\n}\n\nfunction createPromise(position, delay) {\n  // console.log(delay);\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve(Notify.success(`Fulfilled promise ${position} in ${delay}`));\n    } else {\n      reject(Notify.failure(`Rejected promise ${position} in ${delay}`));\n    }\n  });\n\n  return promise;\n  // .then(( position, delay ) => {\n  //   console.log(delay);\n  //   Notify.success(`Fulfilled promise ${position} in ${delay}`);\n  // })\n  // .catch(( position, delay ) => {\n  //   Notify.failure(`Rejected promise ${position} in ${delay}`);\n  // });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","Btn","addEventListener","event","totalDelay","delayValue","stepValue","i","setTimeout","position","shouldResolve","Math","random","Promise","resolve","reject","Notify","success","concat","failure","preventDefault","amountValue","Number","value","i1","_loop","reset"],"version":3,"file":"03-promises.fb16042e.js.map"}